<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("../../partials/header.ejs")%>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');
        
        @keyframes modal-pop-up {
            from {
                transform: scale(0);
            }
            to {
                transform: scale(1);
            }
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body{
            position: relative;
            background-image: linear-gradient(15deg, #181D31 0%, #272829 100%) !important;
        }
        body.modal-open {
            overflow: hidden;
        }
        .hero {
            color: #19191E;
            display: flex;
            gap: 1.5em;
            position: relative;
        }
        select{
            padding: 0 !important;
        }
        .hero.container,
        .ath.container{
            box-shadow: rgba(153, 153, 153, 0.2) 0px 2px 5px 0px !important;
            padding: 2em;
            background-color: white;
            border-radius: 10px;
            width: 1140px;
        }
        .hero img{
            width: 300px;
            height: 250px;
            object-fit: contain;
            mix-blend-mode: multiply;
            margin: 0 auto;
        }
        .desc h1{
            word-spacing: .35em;
            text-transform: uppercase;
        }
        .desc p{
            text-align: justify;
        }
        #add-athlete{
            transition: all .3s ease 0s;
        }
        #add-athlete:active{
            scale: .95;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 30% !important;
            position: relative;
            animation: modal-pop-up 0.3s ease forwards;
        }
        .close {
            position: absolute;
            font-size: 1.5em;
            font-weight: bold;
            cursor: pointer;
            top: 16px;
            right: 20px;
            display: block;
        }
        .close:hover {
            color: red;
        }
        
        select option{
            /* padding: 1em; */
            border: 1px solid #dee2e6;
            border-radius: 8px;
            margin-bottom: .5em;
            display: flex;
            align-items: center;
            font-size: 1.5em;
        }
        option::before {
            content: '';
            display: inline-block;
            width: 80px;
            height: 80px;
            background-size: cover;
            margin-right: 1.5em;
            background-repeat: no-repeat;
            border-radius: 8px 0 0 8px;
        }
        select option:checked {
            background-color: #000000 !important;
            color: #fff;
        }
        :root {
            --background-image: url();
        }
        ::before {
            background-image: var(--background-image);
        }
        ul.athletes-list{
            list-style-type: none;
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 3em;
            column-gap: 2em;
        }
        ul.athletes-list li{
            display: flex;
            flex-direction: column;
            width: 100%;
            margin: 0 auto;
            position: relative;
        }
        ul.athletes-list li img{
            display: block;
            object-fit: cover;
            width: 100%;
            height: 10em;
            margin-bottom: .5em;
            margin: 0 auto;
            margin-bottom: 1em;
            border-radius: 6px;
        }
        ul.athletes-list li a{
            text-decoration: none;
            color: #19191E;
            text-align: center;
        }
        ul.athletes-list li a h2{
            margin: 0;
            margin-bottom: .2em;
            font-size: 1.1em;
        }
        ul.athletes-list li a p{
            margin: 0;
            font-size: .9em;
        }
        ul.athletes-list{
            padding: 0;
            margin-bottom: 0;
        }
        .circle{
            border-radius: 40px;
            background-color: #00000080;
            display: inline-block;
            width: 30px;
            height: 30px;
            padding: 1em;
            position: absolute;
            left: 82%;
            top: 4%;
            cursor: pointer;
            z-index: 1;
        }
        .circle i{
            position: absolute;
            top: 50%;
            left: 50%;
            font-size: 1em;
            transform: translate(-50%, -50%);
            color: white;
        }
        .manage-team{
            width: fit-content;
            display: flex;
            gap: 1em;
            margin-left: auto;
            padding: .5em;
            position: absolute;
            top: 5%;
            right: 3%;
        }
        .manage-team a{
            display: inline-block;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            
        }
        .manage-team .circle{
            border-radius: 40px;
            background-color: #76767659;
            display: inline-block;
            width: 30px;
            height: 30px;
            padding: 1em;
            position: relative;
            cursor: pointer;
            z-index: 1;
            top: 0;
            left: 0;
        }
        .manage-team .circle .bi{
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: #242526;
            transition: all .5s ease 0s;
        }
        .manage-team .circle:active{
            transform: scale(.9);
        }
    </style>
    <script>
        const confirmDelete = (clicked_id)=>{
        Swal.fire({
            title: 'ต้องการลบหรือไม่?',
            text: "ข้อมูลของทีมนี้จะหายไป!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/admin/team/delete/${clicked_id}`
            }
        })
    }
        const confirmDel = (tid, aid)=>{
            Swal.fire({
            title: 'ต้องการลบนักกีฬาหรือไม่?',
            text: "นักกีฬาจะถูกลบออกจากทีม!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#0369a1',
            cancelButtonColor: '#b91c1c',
            confirmButtonText: 'Yes'
            }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/admin/team/del/athlete/${tid}/${aid}`
            }
        })
        }
        window.onload = ()=>{
            const delBtn = document.querySelectorAll(".delete-ath")
            delBtn.forEach(e=>{
                e.addEventListener("click",()=>{
                    const teamId = e.classList[2]
                    const athId = e.classList[3]
                    confirmDel(teamId, athId)
                })
            })
            if(`<%= addStatus%>`){
                Swal.fire(
                    'สำเร็จ!',
                    'เพิ่มนักกีฬาเข้าทีมเรียบร้อย',
                    'success'
                )
            }
            if (`<%= delAth%>`) {
                Swal.fire(
                    'สำเร็จ!',
                    `ลบ <%= delAth%> ออกจากทีมทีมเรียบร้อย`,
                    'success'
                )
            }
        }
    </script>
</head>
<body>
    <%- include("../../partials/nav.ejs")%>
        <div class="container hero mt-4">
            <div class="manage-team">
                <a href="/admin/team/update/<%= team.id%>"><div class="circle"><i class="bi bi-pencil-fill"></i></div></a>
                <a id="<%= team.id%>" onclick="return confirmDelete(this.id)"><div class="circle"><i class="bi bi-trash3"></i></div></a>
            </div>
            <img style="width: 40%;" class="d-block" src="/images/teams/<%=team.logo%>" alt="<%=team.teamname%>">
            <div style="width: 60%;" class="desc">
                <h1>
                    <%=team.teamname%>
                </h1>
                <p class="text-break">
                    <%=team.desc%>
                </p>
            </div>
        </div>
        <div class="ath container mt-3 mb-4">
            <ol class="breadcrumb d-flex" style="margin-bottom: 2em;">
                <li class="breadcrumb-item"><a href="/admin" class="text-decoration-none">จัดการข้อมูลเว็บไซต์</a></li>
                <li class="breadcrumb-item"><a href="/admin/team" class="text-decoration-none">จัดการทีม</a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= team.teamname%></li>
            </ol>
            <div style="align-items: top;" class="d-flex justify-content-between mb-4">
                <h6 style="margin: 0;">นักกีฬาภายในทีม</h6>
                <button id="add-athlete" onclick="openForm()" class="btn text-white" style="background-color: #1e3a8a; font-size: 1.1em;"><i class="bi bi-plus-circle me-2"></i>เพิ่มนักกีฬา</button>
            </div>
            <%
            if(team.athletes.length>0){%>
                <ul class="athletes-list">
                <%for (const ath of team.athletes) {%>
                    <li>
                        <div class="circle delete-ath <%=team._id%> <%=ath._id%>">
                            <i class="bi bi-x-lg"></i>
                        </div>
                        <a href="/admin/editAthletes/<%=ath._id%>">
                            <img src="/images/profile/<%=ath.user.img%>" alt="">
                            <h2>
                                <%=ath.nickname%>
                            </h2>
                            <p>
                                <%=ath.country%>
                            </p>
                        </a>
                    </li>
                    <%}%>
                </ul>
            <%}else{%>
                <ul class="mt-4 athletes-list d-flex">
                    <li class="w-100 text-center">ไม่มีข้อมูลนักกีฬา</li>
                </ul>
            <%}%>
        </div>


        <div id="myModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()"><i class="bi bi-x-square"></i></span>
                <h5>ค้นหาและเลือกนักกีฬา</h5>
                <form action="/admin/team/athlete" method="post">
                    <input type="text" name="teamId" value="<%=team._id%>" readonly hidden>
                    <input class="form-control mr-sm-2 mb-2" type="search" placeholder="ชื่อนักกีฬา" id="search-ath">
                    <select id="select-ath" class="form-select" size="3" name="athlete" multiple required>
                    </select>
                    <button style="margin-left: auto; width: fit-content; background-color: #1e3a8a;" class="mt-3 d-block btn text-white" type="submit">ตกลง</button>
                </form>
            </div>
        </div>

    <script>
        const openForm = ()=>{
            const modal = document.getElementById('myModal')
            modal.style.display = 'block'
            modal.querySelector('.modal-content').classList.add('modal-pop-up')
        }

        const closeModal = ()=>{
            const modal = document.getElementById('myModal')
            modal.style.display = 'none'
            modal.querySelector('.modal-content').classList.remove('modal-pop-up')
        }
        const fetchData = async (url) => {
            const response = await fetch(url)
            const athletes = await response.json()
            return athletes
        }

        const searchBar = document.querySelector('#search-ath')
        const selectAth = document.querySelector('#select-ath')
        
        let url = 'http://localhost:3000/athletes/search'
        let optionImg = []
        fetchData(url)
        .then(data => {
            selectAth.innerHTML = ""
            if(data.length==0){
                    const option = document.createElement('option')
                    option.value = ""
                    option.innerHTML = "ไม่มีข้อมูลนักกีฬา"
                    option.setAttribute("disabled","disabled")
                    selectAth.appendChild(option)
                    return
                }
            for (const obj of data) {
                const option = document.createElement('option')
                option.value = obj._id
                option.innerHTML = obj.nickname
                option.style.setProperty('--background-image', `url(/images/profile/${obj.user.img})`)
                selectAth.appendChild(option)
            }
        })
        
        searchBar.addEventListener('input', async ()=>{
            const searchText = searchBar.value 
            await fetchData(`http://localhost:3000/athletes/search/?nickname=${searchText}`)
            .then(data => {
                selectAth.innerHTML = ""
                if(data.length==0){
                    const option = document.createElement('option')
                    option.value = ""
                    option.innerHTML = "ไม่มีข้อมูลนักกีฬา"
                    option.setAttribute("disabled","disabled")
                    selectAth.appendChild(option)
                    return
                }
                for (const obj of data) {
                    const option = document.createElement('option')
                    option.value = obj._id
                    option.innerHTML = obj.nickname
                    option.style.setProperty('--background-image', `url(/images/profile/${obj.user.img})`)
                    selectAth.appendChild(option)
                }
            })
            
        })
        
        window.onclick = function(event) {
            var modal = document.getElementById('myModal')
            if (event.target == modal) {
                modal.style.display = 'none'
                document.body.classList.remove('modal-open')
            }
        }
    </script>
</body>

</html>